{"version":3,"file":"ProxySpanSessionManager.js","sources":["../../../../../src/api-sessions/manager/ProxySpanSessionManager/ProxySpanSessionManager.ts"],"sourcesContent":["import type { HrTime } from '@opentelemetry/api';\nimport type {\n  PropertyOptions,\n  ReasonSessionEnded,\n  SpanSessionManager,\n  StartSessionOptions,\n} from '../index.js';\nimport { NoOpSpanSessionManager } from '../NoOpSpanSessionManager/index.js';\n\nconst NOOP_SPAN_SESSION_MANAGER = new NoOpSpanSessionManager();\n\nexport class ProxySpanSessionManager implements SpanSessionManager {\n  private _delegate?: SpanSessionManager;\n\n  public getDelegate(): SpanSessionManager {\n    return this._delegate ?? NOOP_SPAN_SESSION_MANAGER;\n  }\n\n  public setDelegate(delegate: SpanSessionManager): void {\n    this._delegate = delegate;\n  }\n\n  public addBreadcrumb(name: string): void {\n    this.getDelegate().addBreadcrumb(name);\n  }\n\n  public addProperty(\n    key: string,\n    value: string,\n    options?: PropertyOptions\n  ): void {\n    this.getDelegate().addProperty(key, value, options);\n  }\n\n  public removeProperty(key: string): void {\n    this.getDelegate().removeProperty(key);\n  }\n\n  public endSessionSpan() {\n    this.getDelegate().endSessionSpan();\n  }\n\n  public endSessionSpanInternal(reason: ReasonSessionEnded) {\n    this.getDelegate().endSessionSpanInternal(reason);\n  }\n\n  public getSessionId(): string | null {\n    return this.getDelegate().getSessionId();\n  }\n\n  public getSessionSpan() {\n    return this.getDelegate().getSessionSpan();\n  }\n\n  public getSessionStartTime(): HrTime | null {\n    return this.getDelegate().getSessionStartTime();\n  }\n\n  public startSessionSpan(options?: StartSessionOptions) {\n    this.getDelegate().startSessionSpan(options);\n  }\n\n  public addSessionStartedListener(listener: () => void): () => void {\n    return this.getDelegate().addSessionStartedListener(listener);\n  }\n\n  public addSessionEndedListener(listener: () => void): () => void {\n    return this.getDelegate().addSessionEndedListener(listener);\n  }\n}\n"],"names":["NOOP_SPAN_SESSION_MANAGER","NoOpSpanSessionManager","ProxySpanSessionManager","getDelegate","_delegate","setDelegate","delegate","addBreadcrumb","name","addProperty","key","value","options","removeProperty","endSessionSpan","endSessionSpanInternal","reason","getSessionId","getSessionSpan","getSessionStartTime","startSessionSpan","addSessionStartedListener","listener","addSessionEndedListener"],"mappings":";;;;AASA,MAAMA,4BAA4B,IAAIC,6CAAAA,EAAAA;AAE/B,MAAMC,uBAAAA,CAAAA;IAGJC,WAAAA,GAAkC;QACvC,OAAO,IAAI,CAACC,SAAS,IAAIJ,yBAAAA;AAC3B,IAAA;AAEOK,IAAAA,WAAAA,CAAYC,QAA4B,EAAQ;QACrD,IAAI,CAACF,SAAS,GAAGE,QAAAA;AACnB,IAAA;AAEOC,IAAAA,aAAAA,CAAcC,IAAY,EAAQ;AACvC,QAAA,IAAI,CAACL,WAAW,EAAA,CAAGI,aAAa,CAACC,IAAAA,CAAAA;AACnC,IAAA;AAEOC,IAAAA,WAAAA,CACLC,GAAW,EACXC,KAAa,EACbC,OAAyB,EACnB;AACN,QAAA,IAAI,CAACT,WAAW,EAAA,CAAGM,WAAW,CAACC,KAAKC,KAAAA,EAAOC,OAAAA,CAAAA;AAC7C,IAAA;AAEOC,IAAAA,cAAAA,CAAeH,GAAW,EAAQ;AACvC,QAAA,IAAI,CAACP,WAAW,EAAA,CAAGU,cAAc,CAACH,GAAAA,CAAAA;AACpC,IAAA;IAEOI,cAAAA,GAAiB;QACtB,IAAI,CAACX,WAAW,EAAA,CAAGW,cAAc,EAAA;AACnC,IAAA;AAEOC,IAAAA,sBAAAA,CAAuBC,MAA0B,EAAE;AACxD,QAAA,IAAI,CAACb,WAAW,EAAA,CAAGY,sBAAsB,CAACC,MAAAA,CAAAA;AAC5C,IAAA;IAEOC,YAAAA,GAA8B;AACnC,QAAA,OAAO,IAAI,CAACd,WAAW,EAAA,CAAGc,YAAY,EAAA;AACxC,IAAA;IAEOC,cAAAA,GAAiB;AACtB,QAAA,OAAO,IAAI,CAACf,WAAW,EAAA,CAAGe,cAAc,EAAA;AAC1C,IAAA;IAEOC,mBAAAA,GAAqC;AAC1C,QAAA,OAAO,IAAI,CAAChB,WAAW,EAAA,CAAGgB,mBAAmB,EAAA;AAC/C,IAAA;AAEOC,IAAAA,gBAAAA,CAAiBR,OAA6B,EAAE;AACrD,QAAA,IAAI,CAACT,WAAW,EAAA,CAAGiB,gBAAgB,CAACR,OAAAA,CAAAA;AACtC,IAAA;AAEOS,IAAAA,yBAAAA,CAA0BC,QAAoB,EAAc;AACjE,QAAA,OAAO,IAAI,CAACnB,WAAW,EAAA,CAAGkB,yBAAyB,CAACC,QAAAA,CAAAA;AACtD,IAAA;AAEOC,IAAAA,uBAAAA,CAAwBD,QAAoB,EAAc;AAC/D,QAAA,OAAO,IAAI,CAACnB,WAAW,EAAA,CAAGoB,uBAAuB,CAACD,QAAAA,CAAAA;AACpD,IAAA;AACF;;;;"}