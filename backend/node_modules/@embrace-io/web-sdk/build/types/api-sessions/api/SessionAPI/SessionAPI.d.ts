import type { HrTime } from '@opentelemetry/api';
import type { PropertyOptions, ReasonSessionEnded, SpanSessionManager, StartSessionOptions } from '../../manager/index.js';
export declare class SessionAPI implements SpanSessionManager {
    private static _instance?;
    private readonly _proxySpanSessionManager;
    private constructor();
    static getInstance(): SessionAPI;
    getSpanSessionManager: () => SpanSessionManager;
    setGlobalSessionManager(sessionManager: SpanSessionManager): void;
    addBreadcrumb(name: string): void;
    addProperty(key: string, value: string, options?: PropertyOptions): void;
    removeProperty(key: string): void;
    endSessionSpan(): void;
    endSessionSpanInternal(reason: ReasonSessionEnded): void;
    getSessionId(): string | null;
    getSessionSpan(): import("@opentelemetry/api").Span | null;
    getSessionStartTime(): HrTime | null;
    startSessionSpan(options?: StartSessionOptions): void;
    addSessionStartedListener(listener: () => void): () => void;
    addSessionEndedListener(listener: () => void): () => void;
}
//# sourceMappingURL=SessionAPI.d.ts.map